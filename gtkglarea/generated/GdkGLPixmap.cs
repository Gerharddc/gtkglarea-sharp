// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GtkGL {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class GdkGLPixmap : GLib.Opaque {

		[DllImport("libgtkglarea-win32-2.0-0.dll")]
		static extern int gdk_gl_pixmap_make_current(IntPtr raw, IntPtr context);

		public int MakeCurrent(GtkGL.GdkGLContext context) {
			int raw_ret = gdk_gl_pixmap_make_current(Handle, context == null ? IntPtr.Zero : context.Handle);
			int ret = raw_ret;
			return ret;
		}

		public GdkGLPixmap(IntPtr raw) : base(raw) {}

		[DllImport("libgtkglarea-win32-2.0-0.dll")]
		static extern IntPtr gdk_gl_pixmap_new(IntPtr visual, IntPtr pixmap);

		public GdkGLPixmap (Gdk.Visual visual, Gdk.Pixmap pixmap) 
		{
			Raw = gdk_gl_pixmap_new(visual == null ? IntPtr.Zero : visual.Handle, pixmap == null ? IntPtr.Zero : pixmap.Handle);
		}

		[DllImport("libgtkglarea-win32-2.0-0.dll")]
		static extern IntPtr gdk_gl_pixmap_ref(IntPtr raw);

		protected override void Ref (IntPtr raw)
		{
			if (!Owned) {
				gdk_gl_pixmap_ref (raw);
				Owned = true;
			}
		}

		[DllImport("libgtkglarea-win32-2.0-0.dll")]
		static extern void gdk_gl_pixmap_unref(IntPtr raw);

		protected override void Unref (IntPtr raw)
		{
			if (Owned) {
				gdk_gl_pixmap_unref (raw);
				Owned = false;
			}
		}

#endregion
	}
}
